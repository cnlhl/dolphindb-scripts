def create_bid_TB_in_DB(dbName,tableName){  
	db=database(directory=dbName);
	if(existsTable(dbName,tableName))
		dropTable(db,tableName)
	columns =`Date`stockcode`BidOrderSeqNo`TransTime`Price`BidPrice1
	type=[DATE,SYMBOL,INT,TIME,DOUBLE,FLOAT]
	orderData = table(1:0, columns,type)
	db.createPartitionedTable(orderData, tableName,`Date`stockcode)
   }

def create_ask_TB_in_DB(dbName,tableName){  
	db=database(directory=dbName);
	if(existsTable(dbName,tableName))
		dropTable(db,tableName)
	columns =`Date`stockcode`AskOrderSeqNo`TransTime`Price`AskPrice1
	type=[DATE,SYMBOL,INT,TIME,DOUBLE,FLOAT]
	orderData = table(1:0, columns,type)
	db.createPartitionedTable(orderData, tableName,`Date`stockcode)
   }

dbName = "dfs://history"
trans_tableName = "transBook"
order_tableName = "orderBook"
depth_tableName = "depthBook"
load_tableName_B = "Bcanceled"
load_tableName_S = "Scanceled"

create_bid_TB_in_DB(dbName,load_tableName_B)
create_ask_TB_in_DB(dbName,load_tableName_S)

tbB = loadTable(dbName,load_tableName_B)
tbS = loadTable(dbName,load_tableName_S)

tb1 = loadTable(dbName,order_tableName)
tb2 = loadTable(dbName,trans_tableName)
tb3 = loadTable(dbName,depth_tableName)

target_stock = "000001"

for (d in 2022.09.01..2022.09.02){
    //empty_judgy
    if(size(select * from tb2 where Date = d limit 1)==0)
        continue
    //select canceled order
	tb_B_cancel = select Date,stockcode,BidOrderSeqNo,time(second(TransactionTime)+(3-second(TransactionTime)%3)) as TransTime from tb2 where CancelFlag = "C" and BSFlag = "B" and Date = d and stockcode = target_stock
	tb_S_cancel = select Date,stockcode,AskOrderSeqNo,time(second(TransactionTime)+(3-second(TransactionTime)%3)) as TransTime from tb2 where CancelFlag = "C" and BSFlag = "S" and Date = d and stockcode = target_stock
    //get order price
	tb_order = select * from tb1 where Date = d and stockcode = target_stock
	tb_B_cancel = select Date,stockcode,BidOrderSeqNo,TransTime,Price from tb_B_cancel left join tb_order on tb_B_cancel.BidOrderSeqNo = tb_order.SeqNo 
	tb_S_cancel = select Date,stockcode,AskOrderSeqNo,TransTime,Price from tb_S_cancel left join tb_order on tb_S_cancel.AskOrderSeqNo = tb_order.SeqNo 
    //get No.1 bider/asker
	tb_depth = select * from tb3 where Date = d and stockcode = target_stock
	tb_B_cancel = select Date,stockcode,BidOrderSeqNo,TransTime,Price,BidPrice1 from tb_B_cancel left join tb_depth on tb_B_cancel.TransTime = tb_depth.DepthMarketTime
	tb_S_cancel = select Date,stockcode,AskOrderSeqNo,TransTime,Price,AskPrice1 from tb_S_cancel left join tb_depth on tb_S_cancel.TransTime = tb_depth.DepthMarketTime
    //clear void price and select the bid1/ask1 order canceled
	null_reduced_B = select * from  tb_B_cancel where Price != NULL and Price = BidPrice1 
    null_reduced_S = select * from  tb_S_cancel where Price != NULL and Price = AskPrice1 
	//load result into table
	tbB.append!(null_reduced_B)
	tbS.append!(null_reduced_S)
}

select top 100* from tbB
