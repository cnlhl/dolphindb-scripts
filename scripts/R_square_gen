
def feature_gen(mutable t){
    update t set feature_value = deltas(t.Price)
}

def trans_convert(target_date,target_stock,horizen){
    trans = loadTable("dfs://history","transBook")
    trans = select * from trans where Date = target_date and stockcode = target_stock and CancelFlag = "F"
    trans = select last(Price)as Price from trans group by interval(TransactionTime,horizen,"prev") as Time
    return trans
}

def profit_gen(mutable t){
    update t set stock_return = eachPre(ratio,Price)-1
}

def R_gen(t, method){
    if(method == "UP"){
        ct = select * from t where stock_return>=0
    }else if(method == "DOWN"){
        ct = select * from t where stock_return<0
    }else{
        ct = t
    }
    sse =  sum(pow((ct.feature_value-ct.stock_return),2))
    sst =  sum(pow((ct.stock_return - avg(ct.stock_return)),2))
    return 1-(sse/sst)
}



def R_square_gen(target_stock, target_date ,horizen, method = "ALL"){
    string2date = temporalParse(target_date,"yyyyMMdd")
    rtb = trans_convert(string2date,target_stock,duration(horizen))
    feature_gen(rtb)
    profit_gen(rtb)
    return R_gen(rtb,method)
}

R = R_square_gen("000001","20210902","30m","DOWN")
print(R)